{"version":3,"file":"314.33ec5cae3be1494b.js","mappings":"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","names":["i0","tipoproduto_r1","routes","path","component","_CadprodutoPage","CadprodutoPage","constructor","combustivelService","route","combustivelDataService","alertController","router","bombaService","utilService","produtoService","this","newProduto","id","nome","idbicos","idbombas","preco","tipoproduto","status","ehcombustivel","ncm","anp","codigobarras","tiposproduto","ngOnInit","loadProduto","produto","getCombustivel","saveProduto","_this","_asyncToGenerator","showAlert","test","toString","produtoCarregado","undefined","produtoJaExiste","getCombustivelById","message","addCombustivel","updateCombustivel","sincronizarProduto","create","header","buttons","text","handler","navigate","present","voltarPagina","_this2","statusString","retornaStatusString","corpo","codigoProduto","Descricao","tipoProduto","verificarEConverterPreco","ehCombustivel","codigoBarras","cupom","sincronizarProdutoSingle","console","log","JSON","stringify","trace_Id","statusCode","errmsg","error","i1","i2","i3","i4","i5","i6","i7","selectors","decls","vars","consts","template","rf","ctx","$event","CadprodutoPage_ion_select_option_19_Template","CadprodutoPageRoutingModule","_CadprodutoPageRoutingModule","RouterModule","forChild","CadprodutoPageModule","_CadprodutoPageModule","CommonModule","FormsModule","IonicModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/cadastro/cadproduto/cadproduto.page.html","./src/app/pages/cadastro/cadproduto/cadproduto-routing.module.ts","./src/app/pages/cadastro/cadproduto/cadproduto.page.ts","./src/app/pages/cadastro/cadproduto/cadproduto.module.ts"],"sourcesContent":["<!-- src\\app\\pages\\cadastro\\cadproduto\\cadproduto.page.html -->\r\n\r\n<ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>Cadastro de Produto</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-item>\r\n    <ion-label position=\"stacked\">Código</ion-label>\r\n    <ion-input [(ngModel)]=\"newProduto.id\" placeholder=\"Digite o código do produto\"></ion-input>\r\n  </ion-item>\r\n\r\n  <ion-item>\r\n    <ion-label position=\"stacked\">Nome</ion-label>\r\n    <ion-input [(ngModel)]=\"newProduto.nome\" placeholder=\"Digite o nome\"></ion-input>\r\n  </ion-item>\r\n\r\n  <ion-item lines=\"full\">\r\n    <ion-label position=\"stacked\">Tipo de produto</ion-label>\r\n    <ion-select [(ngModel)]=\"newProduto.tipoproduto\" required>\r\n      <ion-select-option *ngFor=\"let tipoproduto of tiposproduto\" [value]=\"tipoproduto\">{{ tipoproduto }}</ion-select-option>\r\n    </ion-select>\r\n  </ion-item>\r\n\r\n  <ion-item>\r\n    <ion-label position=\"stacked\">Preço</ion-label>\r\n    <ion-input [(ngModel)]=\"newProduto.preco\" type=\"text\" placeholder=\"Digite o preço\"></ion-input>\r\n  </ion-item>\r\n\r\n  <ion-item>\r\n    <ion-label position=\"stacked\">NCM</ion-label>\r\n    <ion-input [(ngModel)]=\"newProduto.ncm\" placeholder=\"Digite o NCM\"></ion-input>\r\n  </ion-item>\r\n\r\n  <ion-item>\r\n    <ion-label position=\"stacked\">Código de Barras</ion-label>\r\n    <ion-input [(ngModel)]=\"newProduto.codigobarras\" placeholder=\"Digite o Código de Barras\"></ion-input>\r\n  </ion-item>\r\n\r\n  <ion-item>        \r\n    <ion-checkbox labelPlacement=\"end\" justify=\"start\" [(ngModel)]=\"newProduto.status\">Status (Ativo ou Inativo)\r\n    </ion-checkbox>\r\n  </ion-item>\r\n\r\n  <ion-button expand=\"block\" (click)=\"saveProduto()\">Gravar</ion-button>\r\n  <ion-button expand=\"block\" color=\"secondary\" (click)=\"voltarPagina()\">Cancelar</ion-button>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CadprodutoPage } from './cadproduto.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CadprodutoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CadprodutoPageRoutingModule {}\r\n","// src\\app\\pages\\cadastro\\cadproduto\\cadproduto.page.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CombustivelService } from '../../../services/combustivel/combustivel.service';\r\nimport { Combustivel } from '../../../services/database.service';\r\nimport { CombustivelDataService } from '../../../services/combustivel-data/combustivel-data.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { BombaService } from '../../../services/bomba/bomba.service';\r\nimport { UtilService } from '../../../services/util/util.service';\r\n\r\nimport { Produto } from 'src/app/shared/models/produto.model';\r\nimport { ProdutoService } from 'src/app/core/services/produto.service';\r\nimport { sincronizarProdutoSingleRequest } from '../../../shared/models/sincronizarProdutoSingle.request.model';\r\n\r\n@Component({\r\n  selector: 'app-cadproduto',\r\n  templateUrl: './cadproduto.page.html',\r\n  styleUrls: ['./cadproduto.page.scss'],\r\n})\r\nexport class CadprodutoPage implements OnInit {\r\n\r\n  newProduto: Combustivel = { \r\n    id: null, \r\n    nome: '', \r\n    idbicos: '', \r\n    idbombas: '', \r\n    preco: 0.0, \r\n    tipoproduto: '',\r\n    status: true,\r\n    ehcombustivel: true,\r\n    ncm: '',\r\n    anp: '',\r\n    codigobarras: ''};\r\n  produtosDiferentes: boolean;\r\n  erroMsgApi: string;\r\n\r\n  tiposproduto: string[] = ['ETANOL',\r\n  'ETANOL_ADITIVADO',\r\n  'GASOLINA',\r\n  'GASOLINA_ADITIVADA',\r\n  'DIESEL,DIESEL_S500_ADITIVADO',\r\n  'DIESEL_ADITIVADO',\r\n  'DIESEL_S10_ADITIVADO',\r\n  'GASOLINA_PODIUM',\r\n  'GASOLINA_PREMIUM',\r\n  'GNV',\r\n  'ARLA32',\r\n  'QUEROSENE',\r\n  'GASOLINA_TROCA_OLEO',\r\n  'PONTUACAO',\r\n  'OUTRO'];\r\n\r\n  constructor(\r\n    private combustivelService: CombustivelService,\r\n    private route: ActivatedRoute,\r\n    private combustivelDataService: CombustivelDataService,\r\n    private alertController: AlertController,\r\n    private router: Router,\r\n    private bombaService: BombaService,\r\n    private utilService: UtilService,\r\n    private produtoService: ProdutoService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadProduto();\r\n  }\r\n\r\n  loadProduto() {\r\n    const produto = this.combustivelDataService.getCombustivel();\r\n    if (produto) {\r\n      this.newProduto = produto;\r\n    }\r\n  }\r\n\r\n  async saveProduto() {\r\n    // Validação de campos obrigatórios\r\n    if (\r\n      !this.newProduto.id ||\r\n      !this.newProduto.nome ||\r\n      !this.newProduto.preco ||\r\n      !this.newProduto.tipoproduto\r\n    ) {\r\n      await this.utilService.showAlert('Erro', 'Os campos (Id, nome, preço, tipo produto) são obrigatórios.');\r\n      return;\r\n    }\r\n\r\n    const precoRegex = /^\\d+([.,]\\d{1,2})?$/;\r\n\r\n    // Validação preço\r\n    if (!precoRegex.test(this.newProduto.preco.toString())) {\r\n      await this.utilService.showAlert('Erro', 'O campo Preço deve conter apenas números e ponto, com no máximo 4 casas decimais.');\r\n      return;\r\n    }\r\n\r\n    //Restringe atualizar Código do produto\r\n    const produtoCarregado = this.combustivelDataService.getCombustivel();\r\n    if (produtoCarregado?.id != undefined && produtoCarregado?.id != this.newProduto.id) {\r\n      await this.utilService.showAlert('Erro', 'Não é permitido atualizar o código do produto.');\r\n      return;\r\n    }\r\n\r\n    //Valida Produto duplicado\r\n    const produtoJaExiste = await this.combustivelService.getCombustivelById(this.newProduto.id);\r\n    if (produtoJaExiste && produtoCarregado?.id > 0) {\r\n      await this.utilService.showAlert('Erro', `O produto ${produtoJaExiste.id} já foi cadastrado.`);\r\n      return;\r\n    }\r\n\r\n    let message = '';\r\n    if (this.newProduto.id != 0 && produtoJaExiste == undefined) {\r\n      const id = await this.combustivelService.addCombustivel(\r\n        this.newProduto.id,\r\n        this.newProduto.nome,\r\n        this.newProduto.idbicos,\r\n        this.newProduto.idbombas,\r\n        this.newProduto.preco,\r\n        this.newProduto.tipoproduto, \r\n        this.newProduto.status, \r\n        this.newProduto.ehcombustivel, \r\n        this.newProduto.ncm, \r\n        this.newProduto.anp, \r\n        this.newProduto.codigobarras\r\n        );\r\n      this.newProduto.id = id;\r\n      message = `Produto ${id} - ${this.newProduto.nome} adicionado com sucesso!`;\r\n    } else {\r\n      await this.combustivelService.updateCombustivel(\r\n        this.newProduto.id,\r\n        this.newProduto.nome,\r\n        this.newProduto.idbicos,\r\n        this.newProduto.idbombas,\r\n        this.newProduto.preco,\r\n        this.newProduto.tipoproduto, \r\n        this.newProduto.status, \r\n        this.newProduto.ehcombustivel, \r\n        this.newProduto.ncm, \r\n        this.newProduto.anp, \r\n        this.newProduto.codigobarras\r\n        );\r\n      message = `Produto ${this.newProduto.id} - ${this.newProduto.nome} atualizado com sucesso!`;\r\n    }\r\n\r\n    await this.sincronizarProduto();\r\n\r\n    // Exibir alerta de sucesso\r\n    const alert = await this.alertController.create({\r\n      header: 'Sucesso',\r\n      message: message,\r\n      buttons: [\r\n        {\r\n          text: 'OK',\r\n          handler: () => {\r\n            // Redirecionar para a página combustivel após clicar em OK\r\n            this.router.navigate(['/produto']);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  voltarPagina() {\r\n    this.router.navigate(['/produto']);\r\n  }\r\n\r\n  async sincronizarProduto(){\r\n    const statusString = await this.retornaStatusString(this.newProduto.status);\r\n\r\n    const corpo: sincronizarProdutoSingleRequest = {\r\n      codigoProduto: this.newProduto.id.toString(),\r\n      Descricao: this.newProduto.nome,\r\n      tipoProduto: this.newProduto.tipoproduto,\r\n      status: statusString,\r\n      preco: this.utilService.verificarEConverterPreco(this.newProduto.preco),\r\n      ehCombustivel: this.newProduto.ehcombustivel,\r\n      ncm : this.newProduto.ncm,\r\n      anp: this.newProduto.anp,\r\n      codigoBarras: this.newProduto.codigobarras,\r\n    }; \r\n\r\n    try {\r\n      const cupom = await this.produtoService.sincronizarProdutoSingle(corpo);\r\n      \r\n      console.log(`${JSON.stringify(corpo)}`);\r\n      console.log(`TraceID: ${cupom.trace_Id}`);\r\n      console.log(`statusCode: ${cupom.statusCode}`);\r\n\r\n      if (cupom.statusCode = 200){        \r\n        return true;\r\n      }else{\r\n        await this.utilService.showAlert('Erro', `Não foi possível cancelar o desconto: ${cupom.errmsg}`);\r\n        return false;\r\n      }   \r\n    } catch (error) {\r\n      console.error('Erro ao sincronizar combustível:', error);\r\n      await this.utilService.showAlert('Erro', `Não foi possível sincronizar o combustível: ${error}`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async retornaStatusString(status:boolean): Promise<string>{\r\n    if (status){\r\n      return 'ATIVO';\r\n    }else{\r\n      return 'INATIVO';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CadprodutoPageRoutingModule } from './cadproduto-routing.module';\r\n\r\nimport { CadprodutoPage } from './cadproduto.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CadprodutoPageRoutingModule\r\n  ],\r\n  declarations: [CadprodutoPage]\r\n})\r\nexport class CadprodutoPageModule {}\r\n"],"x_google_ignoreList":[]}