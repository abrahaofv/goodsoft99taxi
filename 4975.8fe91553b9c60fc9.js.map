{"version":3,"file":"4975.8fe91553b9c60fc9.js","mappings":"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","names":["i0","combustivel_r2","_r1","$implicit","ctx_r2","editCombustivel","deleteCombustivel","id","nome","preco","tipoproduto","idbombas","idbicos","ncm","anp","codigobarras","retornaStatusString","status","routes","path","component","_CombustivelPage","CombustivelPage","constructor","combustivelService","alertController","combustivelDataService","router","utilService","produtoService","this","combustiveis","newCombustivel","ehcombustivel","ngOnInit","ionViewWillEnter","loadCombustiveis","_this","_asyncToGenerator","getAllCombustiveisCombustivel","sort","a","b","localeCompare","addCombustivel","_this2","create","header","message","buttons","present","_this3","_ref","text","role","handler","apply","arguments","combustivel","setCombustivel","navigate","sincronizarTodosCombustiveis","_this4","itensCorpo","itemCombustivel","statusString","itemCorpo","codigoProduto","toString","Descricao","tipoProduto","verificarEConverterPreco","ehCombustivel","codigoBarras","push","corpo","listaProdutos","console","log","JSON","stringify","cupom","sincronizarProdutoBatch","trace_Id","statusCode","showAlert","errmsg","error","errorMsg","HttpErrorResponse","i1","i2","i3","i4","i5","i6","selectors","decls","vars","consts","template","rf","ctx","CombustivelPage_ion_accordion_8_Template","CombustivelPageRoutingModule","_CombustivelPageRoutingModule","RouterModule","forChild","CombustivelPageModule","_CombustivelPageModule","CommonModule","FormsModule","IonicModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/cadastro/combustivel/combustivel.page.html","./src/app/pages/cadastro/combustivel/combustivel-routing.module.ts","./src/app/pages/cadastro/combustivel/combustivel.page.ts","./src/app/pages/cadastro/combustivel/combustivel.module.ts"],"sourcesContent":["<!-- src/app/pages/combustivel/combustivel.page.html -->\n\n<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Combustíveis</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-accordion-group>\n    <ion-accordion *ngFor=\"let combustivel of combustiveis\">\n      <ion-item slot=\"header\">\n        <ion-label>{{ combustivel.id }} - {{ combustivel.nome }} - R$:{{ combustivel.preco | number: '1.2-2' }}</ion-label>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"editCombustivel(combustivel)\"> Editar </ion-button>\n          <ion-button color=\"danger\" (click)=\"deleteCombustivel(combustivel.id)\"> Deletar </ion-button>\n        </ion-buttons>\n      </ion-item>\n      <ion-list slot=\"content\">\n        <ion-item>\n          <ion-label>\n            <h2>Código: {{ combustivel.id }}</h2>\n            <p>Nome: {{ combustivel.nome }}</p>\n            <p>Tipo produto: {{ combustivel.tipoproduto }}</p>\n            <p>Bombas: {{ combustivel.idbombas }}</p>            \n            <p>Bicos: {{ combustivel.idbicos }}</p>            \n            <p>Preço: {{ combustivel.preco | number: '1.2-2' }}</p>\n            <p>NCM: {{ combustivel.ncm }}</p>\n            <p>ANP: {{ combustivel.anp }}</p>\n            <p>Código de barras: {{ combustivel.codigobarras }}</p>\n            <p>Status: {{ retornaStatusString(combustivel.status) }}</p>\n          </ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-accordion>\n  </ion-accordion-group>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <div class=\"fab-container\">\n      <ion-fab-button (click)=\"sincronizarTodosCombustiveis()\">\n        <ion-icon name=\"sync\"></ion-icon>\n      </ion-fab-button>    \n      <ion-fab-button (click)=\"editCombustivel({ id: null, nome: '', idbicos: '', idbombas: '', preco: 0.0000, tipoproduto: '', status: true, ehcombustivel: true, ncm: '', anp: '', codigobarras: '' })\">\n        <ion-icon name=\"add\"></ion-icon>\n      </ion-fab-button>      \n    </div>\n  </ion-fab>  \n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CombustivelPage } from './combustivel.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CombustivelPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CombustivelPageRoutingModule {}\n","// src/app/pages/combustivel/combustivel.page.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { CombustivelService } from '../../../services/combustivel/combustivel.service';\nimport { Combustivel } from '../../../services/database.service';\nimport { CombustivelDataService } from '../../../services/combustivel-data/combustivel-data.service';\nimport { Router } from '@angular/router';\nimport { sincronizarProdutoSingleRequest } from 'src/app/shared/models/sincronizarProdutoSingle.request.model';\nimport { sincronizarProdutoBatchRequest } from 'src/app/shared/models/sincronizarProdutoBatch.request.model';\nimport { UtilService } from '../../../services/util/util.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProdutoService } from 'src/app/core/services/produto.service';\n\n@Component({\n  selector: 'app-combustivel',\n  templateUrl: './combustivel.page.html',\n  styleUrls: ['./combustivel.page.scss']\n})\nexport class CombustivelPage implements OnInit {\n  combustiveis: Combustivel[] = [];\n  newCombustivel: Combustivel = { \n    id: null, \n    nome: '', \n    idbicos: '', \n    idbombas: '', \n    preco: 0.0, \n    tipoproduto: '',\n    status: true,\n    ehcombustivel: true,\n    ncm: '',\n    anp: '',\n    codigobarras: ''};\n\n  constructor(\n    private combustivelService: CombustivelService,\n    private alertController: AlertController,\n    private combustivelDataService: CombustivelDataService,\n    private router: Router,\n    private utilService: UtilService,\n    private produtoService: ProdutoService,\n  ) {}\n\n  ngOnInit() {\n    //this.loadCombustiveis();\n  }\n\n  ionViewWillEnter() {\n    // Este método é chamado sempre que a página está prestes a ser exibida\n    // Garante que os combustíveis sejam carregados sempre que o usuário voltar para esta página\n    this.loadCombustiveis();\n  }\n\n  async loadCombustiveis() {\n    this.combustiveis = await this.combustivelService.getAllCombustiveisCombustivel();\n    this.combustiveis.sort((a, b) => a.nome.localeCompare(b.nome));\n  }\n\n  async addCombustivel() {\n    if (this.newCombustivel.nome && this.newCombustivel.preco) {\n      const id = await this.combustivelService.addCombustivel(\n        this.newCombustivel.id,\n        this.newCombustivel.nome,\n        this.newCombustivel.idbicos,\n        this.newCombustivel.idbombas,\n        this.newCombustivel.preco,\n        this.newCombustivel.tipoproduto, \n        this.newCombustivel.status, \n        this.newCombustivel.ehcombustivel, \n        this.newCombustivel.ncm, \n        this.newCombustivel.anp, \n        this.newCombustivel.codigobarras\n      );\n      this.newCombustivel.id = id;\n      this.newCombustivel = { \n        id: null, \n        nome: '', \n        idbicos: '', \n        idbombas: '', \n        preco: 0.0, \n        tipoproduto: '',\n        status: true,\n        ehcombustivel: true,\n        ncm: '',\n        anp: '',\n        codigobarras: ''\n      };\n      this.loadCombustiveis();\n      const alert = await this.alertController.create({\n        header: 'Sucesso',\n        message: `Combustível ${id} - ${this.newCombustivel.nome} salvo com sucesso!`,\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n  }\n\n  async deleteCombustivel(id: number) {\n    const alert = await this.alertController.create({\n      header: 'Confirmar Exclusão',\n      message: 'Deseja realmente excluir este combustível?',\n      buttons: [\n        {\n          text: 'Não',\n          role: 'cancel'\n        },\n        {\n          text: 'Sim',\n          handler: async () => {\n            await this.combustivelService.deleteCombustivel(id);\n            this.loadCombustiveis();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  editCombustivel(combustivel: Combustivel) {\n    this.combustivelDataService.setCombustivel(combustivel);\n    this.router.navigate(['/cadcombustivel']);\n  }\n\n  retornaStatusString(status:boolean): string{\n    if (status){\n      return 'ATIVO';\n    }else if(!status){\n      return 'INATIVO';\n    }else{\n      return '';\n    }\n  }\n\n  async sincronizarTodosCombustiveis(){\n    const itensCorpo: sincronizarProdutoSingleRequest[] = []; \n\n    for (const itemCombustivel of this.combustiveis) {\n      const statusString = this.retornaStatusString(itemCombustivel.status);\n      \n      const itemCorpo: sincronizarProdutoSingleRequest = {\n        codigoProduto: itemCombustivel.id.toString(),\n        Descricao: itemCombustivel.nome,\n        tipoProduto: itemCombustivel.tipoproduto,\n        status: statusString,\n        preco: this.utilService.verificarEConverterPreco(itemCombustivel.preco),\n        ehCombustivel: itemCombustivel.ehcombustivel,\n        ncm : itemCombustivel.ncm.toString(),\n        anp: itemCombustivel.anp.toString(),\n        codigoBarras: itemCombustivel.codigobarras.toString(),\n      }; \n      \n      itensCorpo.push(itemCorpo);\n    }\n\n    const corpo: sincronizarProdutoBatchRequest = {\n      listaProdutos: itensCorpo,\n    }\n    \n    console.log(`${JSON.stringify(corpo)}`);\n\n    try {\n      const cupom = await this.produtoService.sincronizarProdutoBatch(corpo);\n      \n      console.log(`${JSON.stringify(corpo)}`);\n      console.log(`TraceID: ${cupom.trace_Id}`);\n      console.log(`statusCode: ${cupom.statusCode}`);\n\n      if (cupom.statusCode = 200){\n        await this.utilService.showAlert('Sucesso', `Todos os combustíveis foram sincronizados.`);\n        return true;\n      }else{\n        await this.utilService.showAlert('Erro', `Não foi possível sincronizar os combustíveis: ${cupom.errmsg}`);\n        return false;\n      }   \n    } catch (error) {\n      console.error('Erro ao sincronizar os combustíveis:', error);\n\n      // Extraia a mensagem de erro correta do objeto error\n      let errorMsg = 'Erro desconhecido';\n      if (error instanceof HttpErrorResponse) {\n        if (error.error && typeof error.error === 'object' && 'errmsg' in error.error) {\n          errorMsg = error.error.errmsg;\n        } else if (error.message) {\n          errorMsg = error.message;\n        }\n      }\n\n      await this.utilService.showAlert('Erro', `Não foi possível sincronizar os combustíveis: ${errorMsg}`);\n      return false;\n    }\n  }  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CombustivelPageRoutingModule } from './combustivel-routing.module';\nimport { CombustivelPage } from './combustivel.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, CombustivelPageRoutingModule],\n  declarations: [CombustivelPage]\n})\nexport class CombustivelPageModule {}\n"],"x_google_ignoreList":[]}