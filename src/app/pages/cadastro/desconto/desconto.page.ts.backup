// src/app/pages/cadastro/desconto/desconto.page.ts

import { Component, OnInit } from '@angular/core';
import { AlertController } from '@ionic/angular';
import { DescontoService } from '../../../services/desconto/desconto.service';
import { Desconto } from '../../../services/database.service';
import { DescontoDataService } from '../../../services/desconto-data/desconto-data.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-desconto',
  templateUrl: './desconto.page.html',
  styleUrls: ['./desconto.page.scss']
})
export class DescontoPage implements OnInit {
  descontos: Desconto[] = [];

  constructor(
    private descontoService: DescontoService,
    private alertController: AlertController,
    private descontoDataService: DescontoDataService,
    private router: Router
  ) {}

  ngOnInit() {
    this.loadDescontos();
  }

  ionViewWillEnter() {
    // Este método é chamado sempre que a página está prestes a ser exibida
    // Garante que os combustíveis sejam carregados sempre que o usuário voltar para esta página
    this.loadDescontos();
  }

  async loadDescontos() {
    this.descontos = await this.descontoService.getAllDescontos();
    this.descontos.sort((a, b) => new Date(b.datahora).getTime() - new Date(a.datahora).getTime());
  }

  async deleteDesconto(iddesconto: number) {
    const alert = await this.alertController.create({
      header: 'Confirmar Exclusão',
      message: 'Deseja realmente excluir este desconto?',
      buttons: [
        {
          text: 'Não',
          role: 'cancel'
        },
        {
          text: 'Sim',
          handler: async () => {
            await this.descontoService.deleteDesconto(iddesconto);
            this.loadDescontos();
          }
        }
      ]
    });
    await alert.present();
  }

  editDesconto(desconto: Desconto) {
    this.descontoDataService.setDesconto(desconto);
    this.router.navigate(['/caddesconto']);
  }

  redirectGerarDesconto() {
    this.descontoDataService.setDesconto(undefined);
    this.router.navigate(['/caddesconto']);
  }

  formatDateTime(dataHora: Date): string {
    if (!dataHora) {
      return '';
    }
    const date = new Date(dataHora);
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based
    const year = date.getFullYear();
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');
    return `${day}/${month}/${year} - ${hours}:${minutes}:${seconds}`;
  }
}
